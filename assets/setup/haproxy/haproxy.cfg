[Config file]
global
    # to have these messages end up in /var/log/haproxy.log you will
    # need to:
    #
    # 1) configure syslog to accept network log events.  This is done
    #    by adding the '-r' option to the SYSLOGD_OPTIONS in
    #    /etc/sysconfig/syslog
    #
    # 2) configure local2 events to go to the /var/log/haproxy.log
    #   file. A line like the following can be added to
    #   /etc/sysconfig/syslog
    #
    #    local2.*                       /var/log/haproxy.log
    #
    log         127.0.0.1 local2

    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     4000
    user        haproxy
    group       haproxy
    daemon

    # turn on stats unix socket
    stats socket /var/lib/haproxy/stats

    tune.ssl.default-dh-param 2048

defaults
    mode    http
    errorfile 503 /etc/haproxy/errorfiles/500.html
    log     global
    option  httplog
    option  dontlognull
    option  http-server-close
    option  forwardfor       except 127.0.0.0/8
    option  redispatch
    retries 3
    timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout client          1m
    timeout server          1m
    timeout http-keep-alive 10s
    timeout check           10s
    # Long timeout for WebSocket connections.
    timeout tunnel 1h
    maxconn 3000

frontend  web_http_frontend
    bind *:80
    reqadd X-Forwarded-Proto:\ http
    default_backend web_http_backend

frontend  web_https_frontend
    # HTTPS
    # Example with CA certificate bundle
    # bind :443 ssl crt cert.pem ca-file bundle.crt
    # Example without CA certification bunch
    # bind :443 ssl crt snakeoil.pem
    bind *:443 ssl crt /root/frontend.pem
    reqadd X-Forwarded-Proto:\ https
    default_backend web_http_backend

backend web_http_backend
    redirect scheme https if !{ ssl_fc }
    mode    http
    stats   enable
    stats   hide-version
    stats   uri /stats
    stats   realm Haproxy\ Statistics
    stats   auth haproxy:redhat
    option  httpclose
    option  forwardfor
    option  httpchk GET /alive.html HTTP/1.1
    balance roundrobin
    cookie  SRVNAME insert
    timeout check 5000
    server  app1 192.168.0.235:8080 cookie zapp1 check
    server  app2 192.168.0.236:8080 cookie zapp2 check
